---

# restore my dumped Netbox database on the LXC container
# https://stribny.name/blog/ansible-postgresql-backups/
# https://docs.ansible.com/ansible/latest/collections/community/postgresql/postgresql_db_module.html

- name: Restore database from dump file
  # the empty database of the same name must exist
  when: "DB_NAME in netbox_psql_info.databases"
  block:

    - name: "Copy database dump to the target"
      ansible.builtin.copy:
        src: "secret/netbox-v2.5.sql"
        dest: "{{ netbox.base_path }}/netbox.sql"
        owner: "{{ wallatinyarchive.user.netbox.name }}"
        group: "{{ wallatinyarchive.user.netbox.name }}"

    - name: "Restore database"
      community.postgresql.postgresql_db:
        name: "{{ DB_NAME }}"
        owner: "{{ DB_USER }}"
        port: "{{ DB_PORT }}"
        state: restore
        target: "{{ netbox.base_path }}/netbox.sql"
      become: true
      become_user: "{{ db_admin_username }}"

    - name: Delete the dump from the target
      ansible.builtin.file:
        path: "{{ netbox.base_path }}/netbox.sql"
        state: absent

    - name: Configure Netbox
      ansible.builtin.template:
        src: configuration.py.j2
        dest: "{{ netbox.base_path }}/netbox/netbox/configuration.py"
        owner: "{{ wallatinyarchive.user.netbox.name }}"
        group: "{{ wallatinyarchive.user.netbox.name }}"
        mode: ug=rw
    
    # failed with
    # django.db.migrations.exceptions.NodeNotFoundError
    # https://github.com/netbox-community/netbox/issues/7151
    # https://github.com/netbox-community/netbox/discussions/8613
    # You have to restore into Netbox 2.11.x first, apply migrations, 
    # then dump the database and restore into 3.0.x, and apply migrations
    # You can go 2.6.x -> 2.11.x -> 3.0.x
    # https://github.com/netbox-community/netbox/discussions/7955
    - name: Apply all database migrations
      ansible.builtin.command: >
        venv/bin/python{{ python_version }}
        netbox/manage.py migrate
      args:
        chdir: "{{ netbox.base_path }}"
      become: true
      become_user: "{{ wallatinyarchive.user.netbox.name }}"
    
    - name: Check for missing cable paths
      ansible.builtin.command: >
        venv/bin/python{{ python_version }}
        netbox/manage.py trace_paths --no-input
      args:
        chdir: "{{ netbox.base_path }}"
      become: true
      become_user: "{{ wallatinyarchive.user.netbox.name }}"
      when: netbox_version is version('3.0', '>')

    # collect static files at /opt/netbox/netbox/static (this will overwrite existing files)
    # requires configuration.py to exist!
    - name: Collect static files
      ansible.builtin.command: >
        venv/bin/python{{ python_version }}
        netbox/manage.py collectstatic --no-input
      args:
        chdir: "{{ netbox.base_path }}"
      become: true
      become_user: "{{ wallatinyarchive.user.netbox.name }}"
    
    - name: Delete stale content types
      ansible.builtin.command: >
        venv/bin/python{{ python_version }}
        netbox/manage.py remove_stale_contenttypes --no-input
      args:
        chdir: "{{ netbox.base_path }}"
      become: true
      become_user: "{{ wallatinyarchive.user.netbox.name }}"
      when: netbox_version is version('3.0', '>')

    - name: Delete any expired user sessions
      ansible.builtin.command: >
        venv/bin/python{{ python_version }}
        netbox/manage.py clearsessions
      args:
        chdir: "{{ netbox.base_path }}"
      become: true
      become_user: "{{ wallatinyarchive.user.netbox.name }}"
      when: netbox_version is version('3.0', '>')
  # END OF BLOCK
