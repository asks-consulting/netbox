---

# create superuser
# can we automate this?
# https://github.com/netbox-community/netbox/discussions/7283
# https://github.com/netbox-community/netbox-docker/blob/e021390568b21f09015d54ee6e2504b20991affa/docker/docker-entrypoint.sh#L60-L66
- name: "Put superuser creation script on {{ ansible_hostname }}"
  ansible.builtin.template:
    src: create_superuser.py.j2
    dest: "{{ netbox.base_path }}/netbox/create_superuser.py"
    owner: "{{ wallatinyarchive.user.netbox.name }}"
    group: "{{ wallatinyarchive.user.netbox.name }}"
    mode: u=rwx

# This failed:
# django.core.exceptions.ImproperlyConfigured: Requested setting INSTALLED_APPS, but 
# settings are not configured. You must either define the environment variable 
# DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings
# Ok, I added the header from manage.py to our python script. New error:
# django.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.
# Now this I don't understand...
# - name: Create superuser
#   ansible.builtin.command: >
#     venv/bin/python{{ ppa_deadsnakes.version }}
#     netbox/create_superuser.py
#   args:
#     chdir: "{{ netbox.base_path }}"
#   become: true
#   become_user: "{{ wallatinyarchive.user.netbox.name }}"

# https://stackoverflow.com/questions/49463341/django-apps-arent-loaded-yet
- name: Create superuser
  ansible.builtin.shell: >
    venv/bin/python{{ ppa_deadsnakes.version }}
    netbox/manage.py shell < netbox/create_superuser.py
  args:
    chdir: "{{ netbox.base_path }}"
  become: true
  become_user: "{{ wallatinyarchive.user.netbox.name }}"

# since this file contains admin password
- name: "Remove superuser creation script"
  ansible.builtin.file:
    path: "{{ netbox.base_path }}/netbox/create_superuser.py"
    state: absent

# Yeah, this did not work at all
# - name: Create superuser
#   ansible.builtin.command: >
#     venv/bin/python{{ ppa_deadsnakes.version }}
#     netbox/manage.py shell --interface python <<END
#     from django.contrib.auth.models import User
#     from users.models import Token
#     if not User.objects.filter(username='{{ SUPERUSER_NAME }}'):
#         u=User.objects.create_superuser(' {{ SUPERUSER_NAME }}', ' {{ SUPERUSER_EMAIL }}', ' {{ SUPERUSER_PASSWORD }}')
#         Token.objects.create(user=u, key='{{ SUPERUSER_API_TOKEN }}')
#     END
#   args:
#     chdir: "{{ netbox.base_path }}"
#   become: true
#   become_user: "{{ wallatinyarchive.user.netbox.name }}"
